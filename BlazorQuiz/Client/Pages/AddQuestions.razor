@page "/addquestion/{publicid}"
@using Microsoft.AspNetCore
@using BlazorQuiz.Shared
@using static System.Net.WebRequestMethods;
@inject HttpClient Http

<h4></h4>
<h3>Add questions to your quiz</h3>

<AuthorizeView>
		<Authorized>
<form>
	<label for="addquestion" >Question</label><br />
	<input type="text" id="question" @bind="addedQuestion" /><br />
	<label for="addquestion" id="question" >Answer</label><br />
	<input type="text" id="answer" @bind=addedAnswer />
	<input type="button" value="Submit" @onclick=AddQuestion>Create quiz</input>
	<br />

	<!-- Timed Quesitons-->
	<p>Timed question?</p>
	<input type="radio" id="notimer" name="timerchoice" value="1" />
	<label @onclick="() => ShowComponent = false" name="No timer">No timer</label>
	<input type="radio" id="timer" name="timerchoice" value="2" />
	<label @onclick="() => ShowComponent = true">Timer</label>

			@if (ShowComponent)
			{
				<p>Show component 1</p>
			}
			<br />
	<button type="button" @onclick="() => ShowComponent = true">Upload</button> <button>button 2</button>
	<input />
			@if (ShowComponent)
			{
				<p>Show component 1</p>
				<form>
					<label for="addMedia">Add Media URL:</label>
					<input type="text" id="addMedia" />
				</form>
			}
</form>
	</Authorized>
	<NotAuthorized>
		<p>Du måste logga in för att skapa ett quiz.</p>
	</NotAuthorized>
</AuthorizeView>


@code {

	bool ShowComponent { get; set; }
	private string selectedRadio;

	[Parameter]
	public string PublicId { get; set; }
	// 
	private string addedQuestion;
	private string addedAnswer;

	private QuestionViewModel questions = new QuestionViewModel();

	private async Task AddQuestion()
	{
		QuestionViewModel newQuestion = new QuestionViewModel()
			{

				Question = addedQuestion,
				Answer = addedAnswer,
				PublicId = PublicId
			};
		var response = await Http.PostAsJsonAsync("api/question/", newQuestion);
	}

	//Lägg i question, answer och publicid i Questioncontrollern
}
