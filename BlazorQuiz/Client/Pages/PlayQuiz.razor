@page "/playquiz/{publicid}"

@inject HttpClient Http
@using BlazorQuiz.Server.Models
@using BlazorQuiz.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using Microsoft.AspNetCore.Components

<h3>Todo: Get quiz title of chosen quiz</h3>


<div class="quiz-container">
    @foreach (var question in quizzes)
    {
        <h4>Fråga: @question.Question</h4>
        <li>
        <label>@question.Answer</label>
        <input type="radio" name="userChoice" @onchange="@(() => selectedAnswer = question.Answer)">
        </li>
        @foreach (var fakeAnswer in question.FakeAnswers)
        {
            <li>
                <label>@fakeAnswer</label>
                <input type="radio" name="userChoice" @onchange="@(() => selectedAnswer = fakeAnswer)">
            </li>
        }
        <p>Time limit: @question.TimeLimit</p>

    }

</div>

@code {

    string selectedAnswer;
    int score = 0;

    // public List<Question> Questions { get; set; } = new List<Question>();

    [Parameter]
    public int questionindex { get; set; }

    [Parameter]
    public string? PublicId { get; set; }

    // private IEnumerable<QuizViewModel> quizzes = new List<QuizViewModel>();

    private List<QuestionViewModel> quizzes = new List<QuestionViewModel>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            quizzes = await Http.GetFromJsonAsync<List<QuestionViewModel>>($"api/quiz/chosenquiz/{PublicId}");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();

        }
    }

    private async Task CheckAnswer()
    {
        var response = await Http.PostAsJsonAsync("api/quiz", selectedAnswer);
        var result = await response.Content.ReadAsStringAsync();
    }

    private void LoadQuestions()
    {
        Question questionOne = new Question
            {
                QuestionTitle = "Question One",
                Answer = "Option 1",
                Options = new List<string>() { "Option 1", "Option 2", "option 3" }

            };
        Question questionTwo = new Question
            {
                QuestionTitle = "Question Two",
                Answer = "Option 2",
                Options = new List<string>() { "Option 1", "Option 2" }
            };

    }

}
